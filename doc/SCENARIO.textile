h1. Scenario

A Scenario is a feasible path through the steps of a set of use case flows. It is usually formed by combinable flows starting from a Basic Flow and passing or not through one or more Alternative Flows. Two flows, _A_ and _B_, are combinable whether _B_ starts in a step of _A_.

h3. Scenario combination

!FunTester firstly generates all the Scenarios for each use case, then it combines Scenarios of each combinable use case. Two use cases, _A_ and _B_, are combinable whether:
*  _A_ contains a step that calls the use case _B_; *or*
* _B_ references a _state_ generated by _A_ - that is, _B_ has a _precondition_ which is a _postcondition_ from (a flow of) _A_.

Currently all the (combinable) scenarios are combined, forming all the feasible scenarios. This still is _really_ fast for medium-sized systems (few tens of use cases). However, the test execution is slow (ranging from minutes to hours), given the nature of user interface tests. That's why we classify the test cases using a Importance value (see "Generated Tests":Generated_Tests), in order to allow testers to filter the test cases to run. Although, we plan to improve this combination, creating a history-based incremental scenario combination (see ticket #14).

Combining scenarios of two use cases is usually an _O(n * m)_ operation, being _n_ and _m_ the number of _combinable_ flows of the use cases _A_ and _B_ (it is important to notice that not all the flows of each use case are included). Our planned approach is to transform this in a _O(k)_ operation being _k_ the greatest of _n_ and _m_, or even lower.
